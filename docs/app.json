[{"name":"app.R","content":"library(\"shiny\")\nlibrary(\"shinythemes\")\nlibrary(\"tidyr\")\nlibrary(\"dplyr\")\nlibrary(\"DT\")\nlibrary(\"bslib\")\n\ntheme <- bs_theme(\n  # Controls the default grayscale palette\n  bg = \"#fff\", fg = \"#202123\",\n  # Controls the accent (e.g., hyperlink, button, etc) colors\n  primary = \"#cc0033\", secondary = \"#48DAC6\",\n  base_font = c(\"Grandstander\", \"sans-serif\"),\n  code_font = c(\"Courier\", \"monospace\"),\n  heading_font = \"'Helvetica Neue', Helvetica, sans-serif\",\n  # Can also add lower-level customization\n  \"input-border-color\" = \"#cc0033\"\n)\n\n# Load datasets\nload(\"distFeat.RData\")\n\n# Extract dataframes\nfeatures <- distFeat[[1]]\ndistFeatDefs <- distFeat[[2]]\n\n# Set characters as factors\nfeatures[sapply(features, is.character)] <- lapply(features[sapply(features, is.character)], as.factor)\n\nfor (i in 7:length(features)){\n    features[, i] <- factor(features[, i], levels = c(\"+\", \"-\"))\n}\n\n\nui <- fluidPage(theme = theme,\n  fluidRow(\n    column(3,\n      titlePanel(\"Spanish allophones\", windowTitle = \"Spanish allophones\"),\n      wellPanel(\n        # Drop down of all features\n        selectInput(\n          inputId = 'in0', \n          label = 'Features', \n          choices = colnames(features[7:length(features)]), \n          multiple = TRUE, selectize = TRUE\n        ), \n      \n        # Radio buttons for features\n        uiOutput(\"ui\"),\n      \n        # Details\n        p(strong(\"Created by:\"), \n        tags$a(\"Joseph V. Casillas\", href=\"http://www.jvcasillas.com\"),\n        br(), strong(\"Source code:\"), \n        tags$a(\"Github\", href=\"https://github.com/jvcasill/shiny_distinctiveFeatures/\"))\n\n        # Include download bottom\n        #downloadButton('downloadData', 'Download')\n      )\n    ), \n    column(3, \n      h2(''),\n      br(), \n      h4('Segments'), \n      br(),\n      htmlOutput(\"symbols\")\n    ),\n    column(5,\n      h2(''),\n      br(),\n      h4('Feature descriptions'), \n      dataTableOutput('defs'),\n      br()\n    )\n  )\n)\n\n\nserver <- function(input, output) {\n\n  # Select specification of features for subsetting\n  output$ui <- renderUI({\n\n    # for each input selected, get levels and display them \n    # as radio buttons \n    lapply(input$in0, function(var) {\n        list(\n          radioButtons(\n            paste0(\"dynamic_\", var), \n            label = var, \n            choices = levels(features[[var]])\n          )\n        )\n      }\n    )\n  })\n\n\n\n\n  # HTML Symbols\n  output$symbols = renderText({ \n\n    # If nothing is selected then return 1st column\n    if(is.null(input$in0)) return(print('Select some features!'))\n    \n    # Create subset from radio output, save as sub\n    sub <- function(data, var) {\n      idx <- data[[var]] == input[[paste0(\"dynamic_\", var)]]\n      data[idx, ]\n    }\n\n    # Use sub to subset features dataframe\n    temp <- Reduce(f = sub, init = features, x = input$in0)\n\n    # datatable(temp[3:6], rownames = FALSE, options = list(searching = FALSE, paging = FALSE, \n    # scrollY = '300px'))\n\n    # Return allophone column of subset\n    print(\n      c(\n        paste0(\n          \"<font face='Times New Roman' size='3'>\",\n          '[ ', \n          temp[, 3], \n          ' ]: ', \n          temp[, 4], \n          ', ', \n          temp[, 5], \n          ', ', \n          temp[, 6], \n          \"<\/br>\", \n          collapse = ''\n        )\n      )\n    )\n  })\n\n  # Print definition of selected features\n  output$defs = renderDataTable({\n\n  # Create datatable of definitions using selected features\n  datatable(\n    distFeatDefs[distFeatDefs$feature %in% input$in0, 3:4], \n    rownames = FALSE, \n    options = list(searching = FALSE, paging = FALSE, scrollY = '300px')\n   )\n  })\n\n  # Download data \n  output$downloadData <- downloadHandler(\n    filename = 'distFeat.csv', \n    content = function(file) {\n      write.csv(features, file)\n    }\n  )\n}\n\n# Create Shiny app ----\nshinyApp(ui = ui, server = server)\n\n","type":"text"},{"name":"distFeat.RData","content":"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\nKi36pgmMcjN/5tP/A47mXk3eVwAA","type":"binary"}]
